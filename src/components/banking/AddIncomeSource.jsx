import React from 'react';
import styled from '@emotion/styled';
import MenuItem from '@material-ui/core/MenuItem';
import FormTextInput from 'components/common/FormTextInput/FormTextInput';
import FormControl from '@material-ui/core/FormControl';
import InputLabel from '@material-ui/core/InputLabel';
import Select from '@material-ui/core/Select';
import * as Yup from 'yup';

import { BackLink } from 'components/common/BackLink';
import ActionButton from 'components/common/ActionButton/ActionButton';
import { H1, H3, Spacer } from 'assets/styles';
import finance from 'assets/images/finance.png';
import captureRoute from 'app/captureRoute';
import { ROUTES } from 'app/constants';
import { Formik } from 'formik';

const SkinnyH1 = styled(H1)`
    width: 70%;
`;

const SpacedH3 = styled(H3)`
    margin-top: 15px;
    margin-bottom: 30px;
`;

const INCOME_TYPES = [
    {
        label: 'Employment',
        value: 105,
    },
    {
        label: 'Self Employment',
        value: 110,
    },
    {
        label: 'Student',
        value: 115,
    },
    {
        label: 'Government',
        value: 120,
    },
    {
        label: 'Retirement',
        value: 125,
    },
    {
        label: 'Child/Spousal Support',
        value: 130,
    },
    {
        label: 'Generated by Finicity',
        value: 135,
    },
    {
        label: 'Other',
        value: 140,
    }
]

export function AddIncomeSource (props) {
    const onSubmit = values => {
        // TODO: submit handling
        props.history.push(ROUTES.MANUAL_INCOME_VERIFICATION);
    }
    return (
        <>
            <SkinnyH1>Add an Income Source</SkinnyH1>
            <SpacedH3>Fill in the details below to add your income source.</SpacedH3>
            <img alt="coin" src={finance}></img>
            <Spacer height={30}/>
            <Formik
                validationSchema={
                    Yup.object({
                        estimated_amount: Yup.string().matches(/(?=.*?\d)^\$?(([1-9]\d{0,2}(,\d{3})*)|\d+)?(\.\d{1,2})?$/, 'Must be a valid dollar amount.')
                    })
                }
                onSubmit={onSubmit}
                initialValues={{
                    income_type: 125,
                    estimated_amount: 120.22
                }}
            >
                {
                ({
                    values,
                    handleChange,
                    handleSubmit,
                    errors,
                    submitCount
                }) => (
                <form onSubmit={handleSubmit}>
                    <div className="align-left">
                        <FormControl fullWidth>
                            <InputLabel htmlFor="income-type">Income Type</InputLabel>
                            <Select
                                value={values.income_type}
                                fullWidth
                                onChange={handleChange}
                                inputProps={{
                                    name: 'income_type',
                                    id: 'income-type',
                                }}
                            >
                                {INCOME_TYPES.map(incomeType => (
                                    <MenuItem key={incomeType.value} value={incomeType.value}>{incomeType.label}</MenuItem>
                                ))}
                            </Select>
                        </FormControl>
                        <Spacer height={24}/>
                        <FormTextInput
                            label="Estimated annual income"
                            name="estimated_amount"
                            type="number"
                            value={values.estimated_amount}
                            handleChange={handleChange}
                            startAdornment={<span style={{color: '#828796', paddingRight: 5}}>$</span>}
                            error={errors.estimated_amount}
                            submitted={submitCount > 0}
                        />
                    </div>
                    <ActionButton marginTop={40} marginBottom={20}>
                        Continue
                    </ActionButton>
                </form>
                )}
            </Formik>
            <BackLink to={ROUTES.MANUAL_INCOME_VERIFICATION}/>
        </>
    );
}
AddIncomeSource.route = ROUTES.MANUAL_INCOME_ENTRY_ADD_INCOME;

export default captureRoute(AddIncomeSource);
